plugins {
    id "com.github.hierynomus.license" version "0.11.0"
}

ext.FTP_USER="ket1999"
version = ext.version = "1.0.0"

subprojects {
    apply plugin: 'java'
}
apply from: 'util.gradle', to: project

if (!project.hasJDK6RT()) {
    throw new RuntimeException("Need to know where your JDK6 rt.jar is! " +
    "(set JAVA6_HOME to a jdk6 home or set JDK6_RT to the rt.jar)")
}

// token: a54f9f87121b530f4a918f7b156efb2c259ff0db

// ext.oauth = "a54f9f87121b530f4a918f7b156efb2c259ff0db"

task doBuild {}

apply from: 'github.gradle', to: project

def subdeps = [:]
def submvn = [:]

def testsubdeps = [:]
def testsubmvn = [:]

File[] dirList(String dir) {
    file(dir).listFiles({file -> file.isDirectory() && !file.getName().startsWith(".")} as FileFilter).sort()
}

void add(item, value) {
    if (item.key != value) {
        item.value.add(value)
    }
}

dirList(".").each{
    subdeps[it.getName()] = []
    submvn[it.getName()] = []
    testsubdeps[it.getName()] = ["Log"]
    testsubmvn[it.getName()] = ["junit:junit:[4.12,)"]
}

subdeps["Math"] += "GeneralUtility"
subdeps["Math"] += "Regex"
subdeps["Regex"] += "GeneralUtility"

submvn["Log"] += "org.apache.logging.log4j:log4j-api:2.0-rc2"
submvn["Log"] += "org.apache.logging.log4j:log4j-core:2.0-rc2"

testsubdeps["Log"] = []

subprojects {
    println "=== Configuring $name ==="

    def root = getParent()
    root.doBuild.dependsOn(":$name:build")

    apply plugin: 'license'
    license {
        header root.file('LICENSE')
        strictCheck true
    }
    // java 6 compat
    compileJava.sourceCompatibility = '1.6'
    compileJava.targetCompatibility = '1.6'
    compileJava.options.bootClasspath = getJDK6RT()
    version = root.version

    jar {
        version = root.version
    }

    apply plugin: 'eclipse'
    
    eclipse {
        jdt {
            sourceCompatibility = 1.6
            targetCompatibility = 1.6
        }
    }

    // eclipse bug workaround
    task reeclipse(dependsOn: ['cleanEclipseClasspath', 'eclipse'])

    repositories {
        mavenCentral()
    }

    dependencies {
        submvn[name].each{
            compile "$it"
        }

        subdeps[name].each{
            compile project(":$it")
        }
        
        testsubmvn[name].each{
            testCompile "$it"
        }

        testsubdeps[name].each{
            testCompile project(":$it")
        }
    }
    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
        version = project.version
    }
    task javadocJar(type: Jar) {
        from javadoc
        classifier = 'javadoc'
        version = project.version
    }
    artifacts {
        archives sourceJar, javadocJar
    }

    println '=== Complete ==='
}

if (!_hasProperty("TRAVIS") || !_property("TRAVIS").toBoolean()) {
    subprojects {
        apply plugin: 'maven'
        apply plugin: 'signing'
        signing {
            sign configurations.archives
        }
        uploadArchives {
          repositories {
            mavenDeployer {
              beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

              repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
              }

              snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
              }

              pom.project {
                groupId "com.techshroom"
                name "tscore-${project.name}"
                packaging 'jar'
                description 'TSCore is a common library for pretty much anything.'
                
                url 'https://github.com/TechShroom/TSCore'

                scm {
                  connection 'git://github.com/TechShroom/TSCore'
                  developerConnection 'git://github.com/TechShroom/TSCore'
                  url 'https://github.com/TechShroom/TSCore'
                }

                licenses {
                  license {
                    name 'The MIT License'
                    url 'https://github.com/TechShroom/TSCore/blob/master/LICENSE'
                  }
                }

                developers {
                  developer {
                    id 'kenzierocks'
                    name 'Kenzie Togami'
                    email 'ket1999@gmail.com'
                  }
                }
              }
            }
          }
        }
    }
}

if (_hasProperty("TRAVIS") && _property("TRAVIS").toBoolean()) {
    apply from: 'travis.gradle', to: project
}
